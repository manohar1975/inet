//
// Copyright (C) 2020 OpenSim Ltd.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

import inet.common.INETDefs;
import inet.common.packet.chunk.Chunk;

cplusplus {{
#include "inet/linklayer/ethernet/Ethernet.h"
}}

namespace inet::physicallayer;

//
// Base class for Ethernet PHY headers.
//
class EthernetPhyHeaderBase extends FieldsChunk
{
    chunkLength = PREAMBLE_BYTES + SFD_BYTES;
}

//
// Represents an Ethernet PHY header.
//
class EthernetPhyHeader extends EthernetPhyHeaderBase
{
}

// http://www.enodenetworks.com/assets/docs/8023br.pdf
enum EthernetPhyHeaderType {
    SFD = 1;         // 0xD5
    SMD_E = SFD;
    SMD_Verify = 2;  // 0x07
    SMD_Respond = 3; // 0x19
    SMD_Sx = 4;      // 0xE6, 0x4C, 0x7F or 0xB3, see smdNumber in EthernetPhyHeader
    SMD_Cx = 5;      // 0x61, 0x52, 0x9E or 0x2A, see smdNumber in EthernetPhyHeader
};

//
// Represents an Ethernet fragment PHY header.
//
class EthernetFragmentPhyHeader extends EthernetPhyHeaderBase
{
    EthernetPhyHeaderType preambleType = SFD;
    uint8_t smdNumber = 0;       // 0-3, see SMD_Sx or SMD_Cx
    uint8_t fragmentNumber = 0;  // 0-3 (real fragment number modulo 4)
}
// preamble bytes: 0x55


